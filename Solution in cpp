class Solution {
public:
int lastoccurence(vector<int>& nums, int target){
    int ans=-1;
    int s=0;
    int e=nums.size()-1;
    while(s<=e){
        int mid=s+(e-s)/2;
        if(nums[mid]==target){
            ans=mid;
            s=mid+1;
        }
        else if(nums[mid]>target){
            e=mid-1;
        }
        else{
            s=mid+1;
        }
    }
    return ans;
}
int firstoccurence(vector<int>& nums, int target){
    int ans=-1;
    int s=0;
    int e=nums.size()-1;
    while(s<=e){
        int mid=s+(e-s)/2;
        if(nums[mid]==target){
            ans=mid;
            e=mid-1;
        }
        else if(nums[mid]>target){
            e=mid-1;
        }
        else{
            s=mid+1;
        }
    }
    return ans;
}
    vector<int> searchRange(vector<int>& nums, int target) {
        if(nums.size()==0) return {-1,-1};
        int ans1=firstoccurence(nums,target);
        int ans2=lastoccurence(nums,target);
        return {ans1,ans2};
    }
};
